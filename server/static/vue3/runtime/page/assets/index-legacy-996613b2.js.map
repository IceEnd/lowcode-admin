{"version":3,"file":"index-legacy-996613b2.js","sources":["../../../../../../packages/ui/src/overlay/src/index.vue"],"sourcesContent":["<template>\n  <magic-ui-container v-if=\"visible\" class=\"magic-ui-overlay\" :config=\"{ items: config.items }\">\n    <slot></slot>\n  </magic-ui-container>\n</template>\n<script lang=\"ts\" setup>\nimport { inject, ref } from 'vue';\n\nimport Core from '@tmagic/core';\nimport type { MComponent, MNode } from '@tmagic/schema';\n\nimport useApp from '../../useApp';\n\nconst props = withDefaults(\n  defineProps<{\n    config: MComponent;\n    model?: any;\n  }>(),\n  {\n    model: () => ({}),\n  },\n);\n\nconst visible = ref(false);\nconst app: Core | undefined = inject('app');\nconst node = app?.page?.getNode(props.config.id);\n\nconst openOverlay = () => {\n  visible.value = true;\n  if (app) {\n    app.emit('overlay:open', node);\n  }\n};\n\nconst closeOverlay = () => {\n  visible.value = false;\n  if (app) {\n    app.emit('overlay:close', node);\n  }\n};\n\napp?.page?.on('editor:select', (info, path) => {\n  if (path.find((node: MNode) => node.id === props.config.id)) {\n    openOverlay();\n  } else {\n    closeOverlay();\n  }\n});\n\nuseApp({\n  config: props.config,\n  methods: {\n    openOverlay,\n    closeOverlay,\n  },\n});\n</script>\n"],"names":["visible","Vue","app","node","page","getNode","props","config","id","openOverlay","value","emit","closeOverlay","on","info","path","find","node2","useApp","methods"],"mappings":"iPAuBAA,EAAgBC,YAChBC,EAA8BD,kBAC9BE,EAAAD,GAAAE,MAAAC,QAAAC,EAAAC,OAAAC,IAEAC,EAAAA,KACET,EAAAU,OAAA,EACAR,GACEA,EAAAS,KAAA,eAAAR,EAA6B,EAIjCS,EAAAA,KACEZ,EAAAU,OAAA,EACAR,GACEA,EAAAS,KAAA,gBAAAR,EAA8B,SAIlCD,GAAAE,MAAAS,GAAA,iBAAA,CAAAC,EAAAC,KACEA,EAAAC,MAAAC,GAAAA,EAAAT,KAAAF,EAAAC,OAAAC,KACEC,IAEAG,GAAa,IAIjBM,EAAA,CAAOX,OAAAD,EAAAC,OACSY,QAAA,CACLV,cACPG"}