{"version":3,"file":"index.55a4739f.js","sources":["../../../../../../packages/ui/src/text/src/index.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, h, inject, PropType } from 'vue';\n\nimport { MComponentInstance, MText, MTextInstance } from '../../../src/types';\nimport useApp from '../../useApp';\n\nexport default defineComponent({\n  props: {\n    config: {\n      type: Object as PropType<MText>,\n      default: () => ({}),\n    },\n\n    model: {\n      type: Object,\n      default: () => ({}),\n    },\n\n    vars: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  setup(props) {\n    useApp(props);\n    const vm: MTextInstance = getCurrentInstance()?.proxy as MTextInstance;\n    const hoc: MComponentInstance = inject('hoc');\n    const displayText = computed(() => {\n      let text = props.config?.text || '';\n      const { vars } = props;\n      if (hoc?.disabled && props.config?.disabledText) {\n        text = props.config.disabledText;\n      }\n      if (typeof text === 'function') {\n        return text.bind(vm)(vm, { model: props.model });\n      }\n      if (Object.prototype.toString.call(vars) === '[object Object]') {\n        let tmp: string = text;\n        Object.entries(vars).forEach(([key, value]) => {\n          tmp = tmp.replace(new RegExp(`{{${key}}}`, 'g'), value);\n        });\n        return tmp;\n      }\n      return text || '';\n    });\n\n    return {\n      displayText,\n    };\n  },\n\n  render() {\n    const className = this.config?.multiple ? 'magic-ui-text' : 'magic-ui-text magic-ui-text--single-line';\n    if (typeof this.$slots?.default === 'function') {\n      return h('div', { class: className }, [this.$slots?.default?.() || '']);\n    }\n    return h('div', {\n      class: className,\n      ...(this.displayText ? { innerHTML: this.displayText } : {}),\n    });\n  },\n});\n</script>\n"],"names":["_sfc_main","props","useApp","vm","_a","hoc","text","vars","_b","tmp","key","value","className","_d","_c"],"mappings":"iFAMA,MAAeA,EAAA,IAAgB,gBAAA,CAAA,MAAA,CACtB,OAAA,CACG,KAAA,OACA,QAAA,KAAA,CAAA,EACW,EACnB,MAAA,CAEO,KAAA,OACC,QAAA,KAAA,CAAA,EACW,EACnB,KAAA,CAEM,KAAA,OACE,QAAA,KAAA,CAAA,EACW,CACnB,EACF,MAAAC,EAAA,OAEEC,EAAAD,CAAA,EACA,MAAAE,GAA0BC,EAAA,2BAAA,YAAAA,QAC1BC,EAAgC,kBAoBhC,MAAA,CAAO,YAnBa,0BAClB,IAAAC,IAAAF,EAAAH,EAAA,SAAA,YAAAG,EAAA,OAAA,GACA,KAAA,CAAA,KAAAG,CAAA,EAAAN,EAIA,IAHAI,GAAA,YAAAA,EAAA,aAAAG,EAAAP,EAAA,SAAA,YAAAO,EAAA,gBACEF,EAAAL,EAAA,OAAA,cAEF,OAAAK,GAAA,WACE,OAAAA,EAAA,KAAAH,CAAA,EAAAA,EAAA,CAAA,MAAAF,EAAA,KAAA,CAAA,EAEF,GAAA,OAAA,UAAA,SAAA,KAAAM,CAAA,IAAA,kBAAA,CACE,IAAAE,EAAAH,EACA,cAAA,QAAAC,CAAA,EAAA,QAAA,CAAA,CAAAG,EAAAC,CAAA,IAAA,CACEF,EAAAA,EAAA,QAAA,IAAA,OAAA,KAAAC,MAAA,GAAA,EAAAC,CAAA,CAAsD,CAAA,EAExDF,CAAO,CAET,OAAAH,GAAA,EAAe,CAAA,CAIf,CACF,EACF,QAAA,aAGE,MAAAM,GAAAR,EAAA,KAAA,SAAA,MAAAA,EAAA,SAAA,gBAAA,2CACA,OAAA,QAAAI,EAAA,KAAA,SAAA,YAAAA,EAAA,UAAA,WACS,IAAE,EAAA,MAAA,CAAA,MAAAI,CAAA,EAAA,GAAAC,GAAAC,EAAA,KAAA,SAAA,YAAAA,EAAA,UAAA,YAAAD,EAAA,KAAAC,KAAA,EAAA,CAAA,EAEJ,aAAS,MAAAF,EACP,GAAA,KAAA,YAAA,CAAA,UAAA,KAAA,WAAA,EAAA,CAAA,CACmD,CAAA,CAC3D,CAEL,CAAA"}